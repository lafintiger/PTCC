import os
from pathlib import Path
from dotenv import load_dotenv

# Load environment variables from .env file if present
load_dotenv()

# Base directory
BASE_DIR = Path(__file__).parent.parent

# App settings
APP_NAME = "PenTest Command Center"
APP_VERSION = "0.1.0"

# Server settings
HOST = os.getenv("HOST", "127.0.0.1")
PORT = int(os.getenv("PORT", 7860))
DEBUG = os.getenv("DEBUG", "True").lower() in ("true", "1", "t")
ENABLE_AUTH = os.getenv("ENABLE_AUTH", "False").lower() in ("true", "1", "t")

# Authentication settings
SECRET_KEY = os.getenv("SECRET_KEY", "change_this_to_a_secure_random_string")
ACCESS_TOKEN_EXPIRE_MINUTES = int(os.getenv("ACCESS_TOKEN_EXPIRE_MINUTES", 60))
USER_CREDENTIALS = {
    "admin": {
        "password": os.getenv("ADMIN_PASSWORD", "admin"),
        "disabled": False,
    }
}

# Storage settings
DATA_DIR = os.getenv("DATA_DIR", os.path.join(BASE_DIR, "data"))
LOGS_DIR = os.getenv("LOGS_DIR", os.path.join(DATA_DIR, "logs"))
REPORTS_DIR = os.getenv("REPORTS_DIR", os.path.join(DATA_DIR, "reports"))
SCAN_RESULTS_DIR = os.getenv("SCAN_RESULTS_DIR", os.path.join(DATA_DIR, "scan_results"))

# Database settings
DATABASE_URL = os.getenv("DATABASE_URL", f"sqlite:///{os.path.join(DATA_DIR, 'database.db')}")

# Tool settings
NMAP_PATH = os.getenv("NMAP_PATH", "nmap")
METASPLOIT_RPC_HOST = os.getenv("METASPLOIT_RPC_HOST", "127.0.0.1")
METASPLOIT_RPC_PORT = int(os.getenv("METASPLOIT_RPC_PORT", 55553))
METASPLOIT_USERNAME = os.getenv("METASPLOIT_USERNAME", "msf")
METASPLOIT_PASSWORD = os.getenv("METASPLOIT_PASSWORD", "")

# OpenVAS settings
OPENVAS_HOST = os.getenv("OPENVAS_HOST", "127.0.0.1") 
OPENVAS_PORT = int(os.getenv("OPENVAS_PORT", 9390))
OPENVAS_USERNAME = os.getenv("OPENVAS_USERNAME", "admin")
OPENVAS_PASSWORD = os.getenv("OPENVAS_PASSWORD", "admin")

# OSINT settings
SHODAN_API_KEY = os.getenv("SHODAN_API_KEY", "")

# Ollama settings
OLLAMA_BASE_URL = os.getenv("OLLAMA_BASE_URL", "http://localhost:11434")
OLLAMA_DEFAULT_MODEL = os.getenv("OLLAMA_DEFAULT_MODEL", "llama3")

# Make sure necessary directories exist
os.makedirs(DATA_DIR, exist_ok=True)
os.makedirs(LOGS_DIR, exist_ok=True)
os.makedirs(REPORTS_DIR, exist_ok=True)
os.makedirs(SCAN_RESULTS_DIR, exist_ok=True)
